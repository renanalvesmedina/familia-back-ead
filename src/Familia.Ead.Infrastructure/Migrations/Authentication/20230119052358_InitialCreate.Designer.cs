// <auto-generated />
using System;
using Familia.Ead.Infrastructure.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Familia.Ead.Infrastructure.Migrations.Authentication
{
    [DbContext(typeof(AuthenticationContext))]
    [Migration("20230119052358_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Familia.Ead.Domain.Entities.Authentication.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ProfilePictureUri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sexo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("6f03e211-d764-4c34-afce-3cdaac7cce5f"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2033bf1f-363f-48ff-8f1b-7b0fc0c4c450",
                            CreatedOn = new DateTime(2023, 1, 19, 2, 23, 58, 491, DateTimeKind.Local).AddTicks(4895),
                            Email = "contato@igrejafamilia.net.br",
                            EmailConfirmed = false,
                            FullName = "Familia Ead Admin",
                            LockoutEnabled = false,
                            NormalizedEmail = "CONTATO@IGREJAFAMILIA.NET.BR",
                            NormalizedUserName = "CONTATO@IGREJAFAMILIA.NET.BR",
                            PasswordHash = "AQAAAAIAAYagAAAAEL58YlvJAVotN9KxHmzjC5OoawVKajgZGVUDWrgy/MOhVGK+zXdeop8gELFLtSu0mQ==",
                            PhoneNumber = "27996239504",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c8494782-2de5-4c38-b65b-2060f93e4866",
                            Sexo = "M",
                            TwoFactorEnabled = false,
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "contato@igrejafamilia.net.br"
                        });
                });

            modelBuilder.Entity("Familia.Ead.Domain.Entities.Authentication.UserClaim", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("UserClaim");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0b9f0fd1-1271-499f-bc79-a15ff2437111"),
                            ClaimType = "Manager",
                            ClaimValue = "Create",
                            CreatedOn = new DateTime(2023, 1, 19, 2, 23, 58, 491, DateTimeKind.Local).AddTicks(4651),
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("eeb28ad4-7634-4e03-86da-6af4fc0da663"),
                            ClaimType = "Manager",
                            ClaimValue = "Edit",
                            CreatedOn = new DateTime(2023, 1, 19, 2, 23, 58, 491, DateTimeKind.Local).AddTicks(4666),
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("21cd46e3-3a76-47e4-96b6-2aea5668ff27"),
                            ClaimType = "Manager",
                            ClaimValue = "View",
                            CreatedOn = new DateTime(2023, 1, 19, 2, 23, 58, 491, DateTimeKind.Local).AddTicks(4668),
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("59d87ba0-1963-4a92-be12-6fca8d159eea"),
                            ClaimType = "Manager",
                            ClaimValue = "Delete",
                            CreatedOn = new DateTime(2023, 1, 19, 2, 23, 58, 491, DateTimeKind.Local).AddTicks(4669),
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("ad39277f-a63c-46e8-848b-e0afac18274d"),
                            ClaimType = "Student",
                            ClaimValue = "Create",
                            CreatedOn = new DateTime(2023, 1, 19, 2, 23, 58, 491, DateTimeKind.Local).AddTicks(4670),
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("74e1d49f-b927-4012-a903-bc34e2b54074"),
                            ClaimType = "Student",
                            ClaimValue = "Edit",
                            CreatedOn = new DateTime(2023, 1, 19, 2, 23, 58, 491, DateTimeKind.Local).AddTicks(4672),
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("2260266c-3a3d-49b6-abc4-41b19ec3f216"),
                            ClaimType = "Student",
                            ClaimValue = "View",
                            CreatedOn = new DateTime(2023, 1, 19, 2, 23, 58, 491, DateTimeKind.Local).AddTicks(4673),
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("6649874b-9959-451c-a776-3f4605ed5a05"),
                            ClaimType = "Student",
                            ClaimValue = "Delete",
                            CreatedOn = new DateTime(2023, 1, 19, 2, 23, 58, 491, DateTimeKind.Local).AddTicks(4686),
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("2cbcbba4-3ec6-4a84-9013-1ea45f5604ba"),
                            ClaimType = "Enrollment",
                            ClaimValue = "Create",
                            CreatedOn = new DateTime(2023, 1, 19, 2, 23, 58, 491, DateTimeKind.Local).AddTicks(4688),
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("d2d22441-64f6-4441-8c31-444607475566"),
                            ClaimType = "Enrollment",
                            ClaimValue = "Edit",
                            CreatedOn = new DateTime(2023, 1, 19, 2, 23, 58, 491, DateTimeKind.Local).AddTicks(4689),
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("89dc7c91-e11b-4353-8db9-ce6102c4c22a"),
                            ClaimType = "Enrollment",
                            ClaimValue = "View",
                            CreatedOn = new DateTime(2023, 1, 19, 2, 23, 58, 491, DateTimeKind.Local).AddTicks(4690),
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("214720b9-285d-493b-a012-8023ea844ecc"),
                            ClaimType = "Enrollment",
                            ClaimValue = "Delete",
                            CreatedOn = new DateTime(2023, 1, 19, 2, 23, 58, 491, DateTimeKind.Local).AddTicks(4692),
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("72e1c8c4-35f7-402a-8dc8-ad85ceebd4ee"),
                            ClaimType = "Course",
                            ClaimValue = "Create",
                            CreatedOn = new DateTime(2023, 1, 19, 2, 23, 58, 491, DateTimeKind.Local).AddTicks(4693),
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3392ab3f-dd18-459a-832c-8a88f50ccc8f"),
                            ClaimType = "Course",
                            ClaimValue = "Edit",
                            CreatedOn = new DateTime(2023, 1, 19, 2, 23, 58, 491, DateTimeKind.Local).AddTicks(4694),
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("d78cefe3-d363-4407-8d88-3bcf0334ad6b"),
                            ClaimType = "Course",
                            ClaimValue = "View",
                            CreatedOn = new DateTime(2023, 1, 19, 2, 23, 58, 491, DateTimeKind.Local).AddTicks(4696),
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("dc462b0c-ae50-4439-9cca-3d1bdf47745c"),
                            ClaimType = "Course",
                            ClaimValue = "Delete",
                            CreatedOn = new DateTime(2023, 1, 19, 2, 23, 58, 491, DateTimeKind.Local).AddTicks(4699),
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("288452e5-4b74-4b33-8b37-4a89ee34d295"),
                            ClaimType = "Class",
                            ClaimValue = "Create",
                            CreatedOn = new DateTime(2023, 1, 19, 2, 23, 58, 491, DateTimeKind.Local).AddTicks(4700),
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("f1e7c3e6-75fd-43fa-976f-a0d659105358"),
                            ClaimType = "Class",
                            ClaimValue = "Edit",
                            CreatedOn = new DateTime(2023, 1, 19, 2, 23, 58, 491, DateTimeKind.Local).AddTicks(4701),
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("d36cb549-f0fd-41a9-a01f-d9175ff34bab"),
                            ClaimType = "Class",
                            ClaimValue = "View",
                            CreatedOn = new DateTime(2023, 1, 19, 2, 23, 58, 491, DateTimeKind.Local).AddTicks(4703),
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("d7c0bf23-5820-4fac-bd96-f5abbd0ed587"),
                            ClaimType = "Class",
                            ClaimValue = "Delete",
                            CreatedOn = new DateTime(2023, 1, 19, 2, 23, 58, 491, DateTimeKind.Local).AddTicks(4704),
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("b4cec1b6-917b-421e-bf79-6491eb6a1cdd"),
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = new Guid("7fb0e422-9a6d-4a87-a925-9815906e6475"),
                            Name = "Manager",
                            NormalizedName = "MANAGER"
                        },
                        new
                        {
                            Id = new Guid("73b8e1eb-845f-4d03-a81f-8c634b633277"),
                            Name = "Student",
                            NormalizedName = "STUDENT"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClaimType = "Manager",
                            ClaimValue = "Create",
                            UserId = new Guid("6f03e211-d764-4c34-afce-3cdaac7cce5f")
                        },
                        new
                        {
                            Id = 2,
                            ClaimType = "Manager",
                            ClaimValue = "Edit",
                            UserId = new Guid("6f03e211-d764-4c34-afce-3cdaac7cce5f")
                        },
                        new
                        {
                            Id = 3,
                            ClaimType = "Manager",
                            ClaimValue = "Delete",
                            UserId = new Guid("6f03e211-d764-4c34-afce-3cdaac7cce5f")
                        },
                        new
                        {
                            Id = 4,
                            ClaimType = "Manager",
                            ClaimValue = "View",
                            UserId = new Guid("6f03e211-d764-4c34-afce-3cdaac7cce5f")
                        },
                        new
                        {
                            Id = 5,
                            ClaimType = "Student",
                            ClaimValue = "Create",
                            UserId = new Guid("6f03e211-d764-4c34-afce-3cdaac7cce5f")
                        },
                        new
                        {
                            Id = 6,
                            ClaimType = "Student",
                            ClaimValue = "Edit",
                            UserId = new Guid("6f03e211-d764-4c34-afce-3cdaac7cce5f")
                        },
                        new
                        {
                            Id = 7,
                            ClaimType = "Student",
                            ClaimValue = "Delete",
                            UserId = new Guid("6f03e211-d764-4c34-afce-3cdaac7cce5f")
                        },
                        new
                        {
                            Id = 8,
                            ClaimType = "Student",
                            ClaimValue = "View",
                            UserId = new Guid("6f03e211-d764-4c34-afce-3cdaac7cce5f")
                        },
                        new
                        {
                            Id = 9,
                            ClaimType = "Enrollment",
                            ClaimValue = "Create",
                            UserId = new Guid("6f03e211-d764-4c34-afce-3cdaac7cce5f")
                        },
                        new
                        {
                            Id = 10,
                            ClaimType = "Enrollment",
                            ClaimValue = "Edit",
                            UserId = new Guid("6f03e211-d764-4c34-afce-3cdaac7cce5f")
                        },
                        new
                        {
                            Id = 11,
                            ClaimType = "Enrollment",
                            ClaimValue = "Delete",
                            UserId = new Guid("6f03e211-d764-4c34-afce-3cdaac7cce5f")
                        },
                        new
                        {
                            Id = 12,
                            ClaimType = "Enrollment",
                            ClaimValue = "View",
                            UserId = new Guid("6f03e211-d764-4c34-afce-3cdaac7cce5f")
                        },
                        new
                        {
                            Id = 13,
                            ClaimType = "Course",
                            ClaimValue = "Create",
                            UserId = new Guid("6f03e211-d764-4c34-afce-3cdaac7cce5f")
                        },
                        new
                        {
                            Id = 14,
                            ClaimType = "Course",
                            ClaimValue = "Edit",
                            UserId = new Guid("6f03e211-d764-4c34-afce-3cdaac7cce5f")
                        },
                        new
                        {
                            Id = 15,
                            ClaimType = "Course",
                            ClaimValue = "Delete",
                            UserId = new Guid("6f03e211-d764-4c34-afce-3cdaac7cce5f")
                        },
                        new
                        {
                            Id = 16,
                            ClaimType = "Course",
                            ClaimValue = "View",
                            UserId = new Guid("6f03e211-d764-4c34-afce-3cdaac7cce5f")
                        },
                        new
                        {
                            Id = 17,
                            ClaimType = "Class",
                            ClaimValue = "Create",
                            UserId = new Guid("6f03e211-d764-4c34-afce-3cdaac7cce5f")
                        },
                        new
                        {
                            Id = 18,
                            ClaimType = "Class",
                            ClaimValue = "Edit",
                            UserId = new Guid("6f03e211-d764-4c34-afce-3cdaac7cce5f")
                        },
                        new
                        {
                            Id = 19,
                            ClaimType = "Class",
                            ClaimValue = "Delete",
                            UserId = new Guid("6f03e211-d764-4c34-afce-3cdaac7cce5f")
                        },
                        new
                        {
                            Id = 20,
                            ClaimType = "Class",
                            ClaimValue = "View",
                            UserId = new Guid("6f03e211-d764-4c34-afce-3cdaac7cce5f")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = new Guid("6f03e211-d764-4c34-afce-3cdaac7cce5f"),
                            RoleId = new Guid("b4cec1b6-917b-421e-bf79-6491eb6a1cdd")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("Familia.Ead.Domain.Entities.Authentication.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("Familia.Ead.Domain.Entities.Authentication.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Familia.Ead.Domain.Entities.Authentication.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("Familia.Ead.Domain.Entities.Authentication.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
