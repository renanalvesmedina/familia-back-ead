// <auto-generated />
using System;
using Familia.Ead.Infrastructure.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Familia.Ead.Infrastructure.Migrations.Authentication
{
    [DbContext(typeof(AuthenticationContext))]
    [Migration("20230102162507_InitialCreateAuth")]
    partial class InitialCreateAuth
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Familia.Ead.Domain.Entities.Authentication.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ProfilePictureUri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("6f03e211-d764-4c34-afce-3cdaac7cce5f"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "06fc4f0b-0345-44e6-8175-e5ff3431cdd8",
                            CreatedOn = new DateTime(2023, 1, 2, 13, 25, 6, 952, DateTimeKind.Local).AddTicks(1141),
                            Email = "contato@igrejafamilia.net",
                            EmailConfirmed = false,
                            FullName = "Familia Ead Admin",
                            LockoutEnabled = false,
                            NormalizedEmail = "CONTATO@IGREJAFAMILIA.NET",
                            NormalizedUserName = "CONTATO@IGREJAFAMILIA.NET",
                            PasswordHash = "AQAAAAIAAYagAAAAEK9ifqB2OXm3hEFQQ9bF77Q2YS2Ssc1vCKHOHMR7m3NzXjl7q3KiHyy/3qIt5YcCFg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "baec3129-3b57-4b51-99e5-cf3ec7bcf184",
                            TwoFactorEnabled = false,
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "contato@igrejafamilia.net"
                        });
                });

            modelBuilder.Entity("Familia.Ead.Domain.Entities.Authentication.UserClaim", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("UserClaim");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ecf86bef-23da-4e57-9077-a82784de5e3d"),
                            ClaimType = "Manager",
                            ClaimValue = "Full",
                            CreatedOn = new DateTime(2023, 1, 2, 13, 25, 6, 952, DateTimeKind.Local).AddTicks(886),
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("c845e746-97f2-446b-9c6d-b200d05349e0"),
                            ClaimType = "Manager",
                            ClaimValue = "Create",
                            CreatedOn = new DateTime(2023, 1, 2, 13, 25, 6, 952, DateTimeKind.Local).AddTicks(899),
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("f64edcc3-afab-4ed8-8f69-3c4725f9b1bf"),
                            ClaimType = "Manager",
                            ClaimValue = "Edit",
                            CreatedOn = new DateTime(2023, 1, 2, 13, 25, 6, 952, DateTimeKind.Local).AddTicks(901),
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("843013f6-0719-422d-868e-1294fcf10f82"),
                            ClaimType = "Manager",
                            ClaimValue = "View",
                            CreatedOn = new DateTime(2023, 1, 2, 13, 25, 6, 952, DateTimeKind.Local).AddTicks(902),
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("cf23afbc-d2c9-4752-ad5c-e4bb6f9a7389"),
                            ClaimType = "Manager",
                            ClaimValue = "Delete",
                            CreatedOn = new DateTime(2023, 1, 2, 13, 25, 6, 952, DateTimeKind.Local).AddTicks(904),
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("6312c0c0-aacf-4e05-80a3-6fac5d9fae09"),
                            ClaimType = "Student",
                            ClaimValue = "Full",
                            CreatedOn = new DateTime(2023, 1, 2, 13, 25, 6, 952, DateTimeKind.Local).AddTicks(905),
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("c804dfa8-ca52-48df-9656-6abf2d0435a3"),
                            ClaimType = "Student",
                            ClaimValue = "Create",
                            CreatedOn = new DateTime(2023, 1, 2, 13, 25, 6, 952, DateTimeKind.Local).AddTicks(906),
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("69e8c893-cd40-4d18-a406-d3b8caf064b8"),
                            ClaimType = "Student",
                            ClaimValue = "Edit",
                            CreatedOn = new DateTime(2023, 1, 2, 13, 25, 6, 952, DateTimeKind.Local).AddTicks(908),
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("4660e114-56a6-4f22-ba63-62d0817db671"),
                            ClaimType = "Student",
                            ClaimValue = "View",
                            CreatedOn = new DateTime(2023, 1, 2, 13, 25, 6, 952, DateTimeKind.Local).AddTicks(911),
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("5d3d8a7b-4cdb-4748-91c8-4b8522ae8fa3"),
                            ClaimType = "Student",
                            ClaimValue = "Delete",
                            CreatedOn = new DateTime(2023, 1, 2, 13, 25, 6, 952, DateTimeKind.Local).AddTicks(912),
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("72ba31e7-3126-4681-86ec-5fd13a362db1"),
                            ClaimType = "Enrollment",
                            ClaimValue = "Full",
                            CreatedOn = new DateTime(2023, 1, 2, 13, 25, 6, 952, DateTimeKind.Local).AddTicks(913),
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("8a275b40-9363-4b22-89d9-97a8793951bc"),
                            ClaimType = "Enrollment",
                            ClaimValue = "Create",
                            CreatedOn = new DateTime(2023, 1, 2, 13, 25, 6, 952, DateTimeKind.Local).AddTicks(915),
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("8ee9286c-476e-4c99-afe9-bb59cbdb1a05"),
                            ClaimType = "Enrollment",
                            ClaimValue = "Edit",
                            CreatedOn = new DateTime(2023, 1, 2, 13, 25, 6, 952, DateTimeKind.Local).AddTicks(916),
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("74338dfc-da12-447a-98ac-ca21a18c996b"),
                            ClaimType = "Enrollment",
                            ClaimValue = "View",
                            CreatedOn = new DateTime(2023, 1, 2, 13, 25, 6, 952, DateTimeKind.Local).AddTicks(917),
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("0ca2411e-d1f1-4b9e-bacb-49dab2bba3cb"),
                            ClaimType = "Enrollment",
                            ClaimValue = "Delete",
                            CreatedOn = new DateTime(2023, 1, 2, 13, 25, 6, 952, DateTimeKind.Local).AddTicks(919),
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("4cf1674e-a0cf-4b14-b071-1650a79b3cf5"),
                            ClaimType = "Course",
                            ClaimValue = "Full",
                            CreatedOn = new DateTime(2023, 1, 2, 13, 25, 6, 952, DateTimeKind.Local).AddTicks(920),
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("0f428f78-f84d-448c-ac65-8fc5509ab3e6"),
                            ClaimType = "Course",
                            ClaimValue = "Create",
                            CreatedOn = new DateTime(2023, 1, 2, 13, 25, 6, 952, DateTimeKind.Local).AddTicks(923),
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("1f9bae7f-1247-4ef4-b1c1-77aa400306ae"),
                            ClaimType = "Course",
                            ClaimValue = "Edit",
                            CreatedOn = new DateTime(2023, 1, 2, 13, 25, 6, 952, DateTimeKind.Local).AddTicks(924),
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("7c9737cf-c661-4929-a82a-5daa57fe7aaf"),
                            ClaimType = "Course",
                            ClaimValue = "View",
                            CreatedOn = new DateTime(2023, 1, 2, 13, 25, 6, 952, DateTimeKind.Local).AddTicks(925),
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("c60e0d36-c81f-4881-89c2-71457bb502e4"),
                            ClaimType = "Course",
                            ClaimValue = "Delete",
                            CreatedOn = new DateTime(2023, 1, 2, 13, 25, 6, 952, DateTimeKind.Local).AddTicks(926),
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("cd55d634-5e00-410a-ab37-b918e1fbe113"),
                            ClaimType = "Class",
                            ClaimValue = "Full",
                            CreatedOn = new DateTime(2023, 1, 2, 13, 25, 6, 952, DateTimeKind.Local).AddTicks(927),
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("5f9adc64-f23f-43e0-a9a7-6715f35ee4f0"),
                            ClaimType = "Class",
                            ClaimValue = "Create",
                            CreatedOn = new DateTime(2023, 1, 2, 13, 25, 6, 952, DateTimeKind.Local).AddTicks(929),
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("231f9da4-7edc-4fc7-bdc1-1db838f9f11d"),
                            ClaimType = "Class",
                            ClaimValue = "Edit",
                            CreatedOn = new DateTime(2023, 1, 2, 13, 25, 6, 952, DateTimeKind.Local).AddTicks(930),
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("dd3cf41b-850a-4446-b546-f34460df4a26"),
                            ClaimType = "Class",
                            ClaimValue = "View",
                            CreatedOn = new DateTime(2023, 1, 2, 13, 25, 6, 952, DateTimeKind.Local).AddTicks(931),
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("11d4e56c-0f06-4e29-af57-c338c2131d98"),
                            ClaimType = "Class",
                            ClaimValue = "Delete",
                            CreatedOn = new DateTime(2023, 1, 2, 13, 25, 6, 952, DateTimeKind.Local).AddTicks(934),
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("b4cec1b6-917b-421e-bf79-6491eb6a1cdd"),
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = new Guid("7fb0e422-9a6d-4a87-a925-9815906e6475"),
                            Name = "Manager",
                            NormalizedName = "MANAGER"
                        },
                        new
                        {
                            Id = new Guid("73b8e1eb-845f-4d03-a81f-8c634b633277"),
                            Name = "Student",
                            NormalizedName = "STUDENT"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClaimType = "Manager",
                            ClaimValue = "Full",
                            UserId = new Guid("6f03e211-d764-4c34-afce-3cdaac7cce5f")
                        },
                        new
                        {
                            Id = 2,
                            ClaimType = "Student",
                            ClaimValue = "Full",
                            UserId = new Guid("6f03e211-d764-4c34-afce-3cdaac7cce5f")
                        },
                        new
                        {
                            Id = 3,
                            ClaimType = "Enrollment",
                            ClaimValue = "Full",
                            UserId = new Guid("6f03e211-d764-4c34-afce-3cdaac7cce5f")
                        },
                        new
                        {
                            Id = 4,
                            ClaimType = "Course",
                            ClaimValue = "Full",
                            UserId = new Guid("6f03e211-d764-4c34-afce-3cdaac7cce5f")
                        },
                        new
                        {
                            Id = 5,
                            ClaimType = "Class",
                            ClaimValue = "Full",
                            UserId = new Guid("6f03e211-d764-4c34-afce-3cdaac7cce5f")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = new Guid("6f03e211-d764-4c34-afce-3cdaac7cce5f"),
                            RoleId = new Guid("b4cec1b6-917b-421e-bf79-6491eb6a1cdd")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("Familia.Ead.Domain.Entities.Authentication.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("Familia.Ead.Domain.Entities.Authentication.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Familia.Ead.Domain.Entities.Authentication.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("Familia.Ead.Domain.Entities.Authentication.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
